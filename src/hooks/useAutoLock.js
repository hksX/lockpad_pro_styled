import { useEffect, useRef } from 'react'; export default function useAutoLock(onLock, minutes=5){ const last=useRef(Date.now()); useEffect(()=>{ let timer; const reset=()=>{ last.current=Date.now(); if(timer) clearTimeout(timer); timer=setTimeout(()=>onLock(), minutes*60*1000); }; const vis=()=>{ if(document.hidden) onLock(); else reset(); }; window.addEventListener('mousemove', reset); window.addEventListener('keydown', reset); window.addEventListener('click', reset); document.addEventListener('visibilitychange', vis); reset(); return ()=>{ window.removeEventListener('mousemove', reset); window.removeEventListener('keydown', reset); window.removeEventListener('click', reset); document.removeEventListener('visibilitychange', vis); if(timer) clearTimeout(timer); }; },[onLock,minutes]); }
