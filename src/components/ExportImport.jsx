import React from 'react'; import { getAllNotes, bulkAddNotes, clearAllNotes } from '../utils/db'; const VER='lockpad_verifier', SALT='lockpad_salt'; export default function ExportImport({onImported}){ const exportAll=async()=>{ const salt=localStorage.getItem(SALT); const ver=localStorage.getItem(VER); const notes = await getAllNotes(); const payload={meta:{salt,ver,exportedAt:new Date().toISOString()}, notes}; const blob=new Blob([JSON.stringify(payload,null,2)],{type:'application/json'}); const a=document.createElement('a'); a.href=URL.createObjectURL(blob); a.download='lockpad-export.json'; document.body.appendChild(a); a.click(); a.remove(); }; const onFile=(e)=>{ const f=e.target.files[0]; if(!f) return; const r=new FileReader(); r.onload=async(ev)=>{ try{ const data=JSON.parse(ev.target.result); if(!data.meta||!data.notes) return alert('Invalid file'); const localSalt=localStorage.getItem(SALT); if(!localSalt){ localStorage.setItem(SALT,data.meta.salt); localStorage.setItem(VER,data.meta.ver); await clearAllNotes(); await bulkAddNotes(data.notes); alert('Imported and set up'); if(onImported) onImported(); return; } if(localSalt !== data.meta.salt){ if(!confirm('Different master password salt. Overwrite local data?')) return; localStorage.setItem(SALT,data.meta.salt); localStorage.setItem(VER,data.meta.ver); await clearAllNotes(); await bulkAddNotes(data.notes); alert('Imported and overwritten'); if(onImported) onImported(); return; } const existing = await getAllNotes(); const existingIds = new Set(existing.map(n=>n.id)); const toAdd = data.notes.filter(n=>!existingIds.has(n.id)); await bulkAddNotes(toAdd); alert(`Merged ${toAdd.length} notes`); if(onImported) onImported(); }catch(err){ alert('Import failed: '+err.message); } }; r.readAsText(f); e.target.value=null; }; return (<div style={{display:'inline-block'}}><button className='btn' onClick={exportAll}>Export</button><label style={{marginLeft:8, cursor:'pointer'}}><input type='file' accept='application/json' onChange={onFile} style={{display:'none'}}/><span className='small' style={{textDecoration:'underline'}}>Import</span></label></div>); }
